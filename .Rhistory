barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
# 한 화면에 여러 그래프 작성!
par( mfrow = c(1,3) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
# 한 화면에 여러 그래프 작성!
par( mfcol = c(1,3) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
# 한 화면에 여러 그래프 작성!
par( mfcol = c(1,3) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
par( mfrow = c(1,1) ) # 가상화면 분할 해제
hist( dist, main = 'Histogram for 제도거리',
xlab = '제동거리', ylab = '빈도수',
border = 'blue', col = 'green',
las = 1, breaks = 5)
hist( dist, main = 'Histogram for 제도거리',
xlab = '제동거리', ylab = '빈도수',
border = 'blue', col = 'green',
las = 1, breaks = 2)
hist( dist, main = 'Histogram for 제도거리',
xlab = '제동거리', ylab = '빈도수',
border = 'blue', col = 'green',
las = 1, breaks = 10)
par( mfrow = c(1,1) ) # 가상화면 분할 해제
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
# 한 화면에 여러 그래프 작성!
par( mfrow = c(1,9) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
# 한 화면에 여러 그래프 작성!
par( mfrow = c(1,3), mfcol = c(1,3) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
par( mfrow = c(1,1) ) # 가상화면 분할 해제
# 한 화면에 여러 그래프 작성!
par( mfrow = c(1,3), mfcol = c(1,3) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
# 한 화면에 여러 그래프 작성!
par( mfg = c(1,9) ) #1x3 가상화면 분할
# 한 화면에 여러 그래프 작성!
par( mfg = c(1,4) ) #1x3 가상화면 분할
# 한 화면에 여러 그래프 작성!
par( mfg = c(1,3) ) #1x3 가상화면 분할
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
par( mfrow = c(1,1) ) # 가상화면 분할 해제
barplot( table( mtcars$carb), main = 'Car',
xlab = 'carburetors', ylab = 'freq',
las = 1, col = 'blue')
barplot( table( mtcars$cyl), main = 'cyl',
xlab = 'cyl', ylab = 'freq',
las = 1, col = 'red')
barplot( table( mtcars$gear), main = 'gear',
xlab = 'gear', ylab = 'freq',
las = 1, col = 'green')
par( mfrow = c(1,1) ) # 가상화면 분할 해제
#1-1
# 위의 자료를 gender 벡터에 저장하시오.
gender <- c('F','F','F','M','M','F','F','F','M','M')
#1-2
# gender에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
table(gender)
#1-3
barplot(gender, main = 'Gender barplot')
#1-3
barplot(table(gender), main = 'Gender barplot')
#1-4
# gender에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(gd, main = 'Gender Pie')
#1-3
# gender에 있는 값들에 대해 막대그래프를 작성하여 출력하시오.
gd <- table(gender)
barplot(gd, main = 'Gender barplot')
#1-4
# gender에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(gd, main = 'Gender Pie')
# 2-1
# 위의 자료를 season 벡터에 저장하시오.
season <- c('여름','겨울','봄','가을',
'여름','가을','겨울','여름',
'여름','가을')
# 2-2
# season에 있는 값들에 대해 도수분포표를 작성하여 출력하시오.
table(season)
barplot(ss, main = 'Season')
# 2-3
# season에 있는 값들에 대해 막대그래프를 작성하여 출력하시오.
ss <- table(season)
barplot(ss, main = 'Season')
# 2-4
# season에 있는 값들에 대해 원그래프를 작성하여 출력하시오.
pie(ss, main = 'Season')
# 3-1
# 위 데이터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
score <- c(90,85,73,80,85,65,78,50,68,96)
names(score) <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
score
# 3-3
# 전체 성적의 평균과 중앙값을 각각 구하시오.
mean(score)
median(score)
# 3-4
# 전체 성적의 표준편차를 출력하시오.
sd(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
max(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
rownames(max(score))
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
which(max(score))
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
apply(score,1,max)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
apply(score,2,max)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
names(score0
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
names(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
rownames(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
colnames(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
max( score  )
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
dimnames(score == max(score))
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
row.names(score == max(score))
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
row.names(score)
# 3-2
# score 벡터의 내용을 출력하시오.
score
# Matrix에서 행/열에 이름 지정 (nrow,ncol)=(관측치, 변수)
score <- matrix(c(90,85,69,78,
85,96,49,95,
90,80,70,70),
nrow=4, ncol=3)
score
rownames(score) <- c("Hong", "Kim", "Lee", "Yoo")
colnames(score) <- c("English", "Math","Science")
score
score['Hong', 'Math']
score['Kim',c('Math','Science')]
score['Lee',]
score[,'English']
rownames(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score$name
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score.name
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
which.max(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
which(max(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
which(max(score))
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
which.max(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score[which.max(score)]$name
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score[which.max(score)]
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
#score[which.max(score)]
score$names
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
#score[which.max(score)]
score$name
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
#score[which.max(score)]
score[names]
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
#score[which.max(score)]
score.names
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
#score[which.max(score)]
score[names[1]]
# 3-1
# 위 데이터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
score <- c(90,85,73,80,85,65,78,50,68,96)
score.name <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART')
names(score) <- score.name
score
score
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score.name[which.max(score)]
# 3-6
# 성적에 대한 상자그림을 작성하고,
# 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score, main = "SCORE BOXPLOT")
boxplot.stats(score)
boxplot.stats(score).out
boxplot.stats(score)$out
# 3-6
# 성적에 대한 상자그림을 작성하고,
# 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score, main = "SCORE BOXPLOT")
# 3-1
# 위 데이터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
score <- c(90,85,73,80,85,65,78,50,68,96,1000)
score.name <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART','COM')
names(score) <- score.name
score
# 3-2
# score 벡터의 내용을 출력하시오.
score
# 3-3
# 전체 성적의 평균과 중앙값을 각각 구하시오.
mean(score)
median(score)
# 3-4
# 전체 성적의 표준편차를 출력하시오.
sd(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score.name[which.max(score)]
# 3-6
# 성적에 대한 상자그림을 작성하고,
# 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score, main = "SCORE BOXPLOT")
# 3-1
# 위 데이터를 score 벡터에 저장하시오(과목명은 데이터 이름으로 저장).
score <- c(90,85,73,80,85,65,78,50,68,96,200)
score.name <- c('KOR','ENG','ATH','HIST','SOC','MUSIC','BIO','EARTH','PHY','ART','COM')
names(score) <- score.name
score
# 3-2
# score 벡터의 내용을 출력하시오.
score
# 3-3
# 전체 성적의 평균과 중앙값을 각각 구하시오.
mean(score)
median(score)
# 3-4
# 전체 성적의 표준편차를 출력하시오.
sd(score)
# 3-5
# 가장 성적이 높은 과목의 이름을 출력하시오.
score.name[which.max(score)]
# 3-6
# 성적에 대한 상자그림을 작성하고,
# 이상치에 해당하는 과목이 있으면 출력하시오.
boxplot(score, main = "SCORE BOXPLOT")
boxplot.stats(score)$out
# 3-7
# 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적', col = 'perple')
# 3-7
# 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적', col = 'purple')
# 3-7
# 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적', col = 'purple', breaks = 10)
# 3-7
# 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적', col = 'purple', breaks = 20)
# 3-7
# 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적', col = 'purple', breaks = 50)
# 3-7
# 다음 조건을 만족하는 위 성적에 대한 히스토그램을 작성하시오.
# (그래프 제목: 학생 성적, 막대의 색: 보라색)
hist(score, main = '학생 성적', col = 'purple', breaks = 20)
# 4-1
# 중량(wt)의 평균값, 중앙값,
# 절사평균값(절사범위: 15%), 표준편차를 각각 구하시오.
mean(mtcars$wt)
median(mtcars$wt)
mean(mtcars$wt, trim = 0.15)
sd(mtcars$wt)
# 4-2
# 중량(wt)에 대해 summary( ) 함수의 적용 결과를 출력하시오.
summary(mtcars$wt)
# 4-3
# 실린더수(cyl)에 대해 도수분포표를 출력하시오.
table(mtcars$cly)
# 4-3
# 실린더수(cyl)에 대해 도수분포표를 출력하시오.
mtcars$cly
# 4-3
# 실린더수(cyl)에 대해 도수분포표를 출력하시오.
mtcars
# 4-3
# 실린더수(cyl)에 대해 도수분포표를 출력하시오.
mtcars$cyl
# 4-3
# 실린더수(cyl)에 대해 도수분포표를 출력하시오.
table(mtcars$cyl)
# 4-4
barplot(mtcars$cyl)
# 4-4
barplot(table(mtcars$cyl))
# 4-5
# 중량(wt)의 히스토그램을 출력하시오.
hist(table(mtcars$wt))
# 4-6
# 중량(wt)에 대해 상자그림을 출력하시오.
# (단, 상자그림으로부터 관찰할 수 있는정보를 함께 출력하시오.)
boxplot(table(mtcars$wt))
# 4-5
# 중량(wt)의 히스토그램을 출력하시오.
hist(table(mtcars$wt))
# 4-6
# 중량(wt)에 대해 상자그림을 출력하시오.
# (단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
boxplot(table(mtcars$wt))
# 4-2
# 중량(wt)에 대해 summary( ) 함수의 적용 결과를 출력하시오.
summary(mtcars$wt)
table(mtcars$wt)
# 4-6
# 중량(wt)에 대해 상자그림을 출력하시오.
# (단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
boxplot(mtcars$wt)
# 4-5
# 중량(wt)의 히스토그램을 출력하시오.
hist(table(mtcars$wt))
# 4-5
# 중량(wt)의 히스토그램을 출력하시오.
hist(mtcars$wt)
# 4-6
# 중량(wt)에 대해 상자그림을 출력하시오.
# (단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
boxplot(mtcars$wt)
boxplot.stats(mtcars$wt)
# 4-7
# 배기량(disp)에 대한 상자그림을 출력하시오.
# (단, 상자그림으로부터 관찰할 수 있는 정보를 함께 출력하시오.)
boxplot(mtcars$disp)
boxplot.stats(mtcars$disp)
boxplot(mtcars$gear~mtcars$mpg)
boxplot(mtcars$gear~mtcars$mpg)
#일변량중 그룹으로 구성된 자료의 상자그림
boxplot( Petal.Length~Species,
data = iris,
main = '품종별 꽃잎의 길이')
boxplot(mtcars$gear~mtcars$mpg)
boxplot(mtcars$mpg~mtcars$gear)
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
box
box <- boxplot(mtcars$mpg~mtcars$gear)
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
box
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
box[,1]
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
box
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
summary(mtcars$mpg)
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
summary(gear==3, mtcars$mpg)
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
summary(mtcars$mpg[gear==3])
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
summary(mtcars$mpg[mtcars$gear==3])
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
summary( mtcars$mpg[ mtcars$gear==3] )
summary( mtcars$mpg[ mtcars$gear==4] )
summary( mtcars$mpg[ mtcars$gear==5] )
mtcars
boxplot.stats(mtcars$disp)
box <- boxplot(mtcars$mpg~mtcars$gear)
### 3단기어 자동차가 4단과 5단 기어 자동차보다
### 연비 산포 범위가 좁은 것으로 나타나므로
### 연비율이 좋다고 할 수 있습니다.
summary( mtcars$mpg[ mtcars$gear==3] )
summary( mtcars$mpg[ mtcars$gear==4] )
summary( mtcars$mpg[ mtcars$gear==5] )
