eng = c(98,97,86,98,80,89),
sci = c(50,60,78,58,65,98))
df
df <- data.frame(id = c(1,2,3,4,5,6),
class = c(1,1,1,1,2,2),
math = c(50,60,45,30,25,50),
eng = c(98,97,86,98,80,89),
sci = c(50,60,78,58,65,98))
df
head(state.x77)
st.df %>% select(rownames(st.df), Illiteracy) %>%
arrange(Illiteracy) %>%
head(10)
# 데이터 집계 :     p1 : 집계 대상, by : 집계 기준, FUN : oper
agg <- aggregate( iris[,-5],
by = list(iris$Species),
FUN = mean )
agg
# Matrix / Data Frame 정렬
head( iris )
order( iris$Sepal.Length )  # 정렬하면 나타날 순서를 표시
iris[ order(iris$Sepal.Length), ]                     #Ascending
iris[ order(iris$Sepal.Length, decreasing = TRUE), ]  #Decreasing
iris.new <- iris[ order( iris$Sepal.Length ), ]
head(iris.new)
iris[ order( iris$Species, decreasing = TRUE,
iris$Sepal.Length ), ]                   # 정렬 기준 다중 설정
# 결측치 자료 조합 확인용 시각화 도구
aggr( x, prop = FALSE, numbers = TRUE )
# 두 개의 변수 간의 결측치 관계 확인 시각화 도구
marginplot( x[c('Sepal.Width','Sepal.Length')],
pch = 20,
col = c( 'darkgray', 'red', 'blue' ) )
st.df %>% select(rownames(st.df), Illiteracy) %>%
arrange(Illiteracy) %>%
head(10)
st.df %>% select(rownames(st.df), Illiteracy) %>%
arrange(Illiteracy) %>%
head(10)
st.df %>% select(Illiteracy) %>%
arrange(Illiteracy) %>%
head(10)
# 문5)
# R에서 제공하는 mtcars 데이터셋에 대하여 다음 문제를 해결하기 위한 R
# 코드를 작성하시오.
#
# (1) mtcars 데이터셋을 gear(기어)의 개수에 따라 그룹을 나누어 mt.gear에 저장하
# 시오.(단, split() 함수를 사용)
mt.gear <- split(mtcars,mtcars$gear)
mt.gear
mt.gear$4
# 데이터 분리
sp <- split( iris, iris$Species ) # param2 를 기준으로 param1을 리스트 형식으로 나눔
# split( param1, param2 )
sp
summary(sp)
summary(sp$setosa)
sp$setosa
mt.gear[ gear == 4 ]
mt.gear$`4`
mt.gear.35 <- merge(mt.gear$`3`, mt.gear$`5`)
mt.gear.35
mt.gear.35 <- merge(mt.gear$`3`, mt.gear$`5`)
mt.gear.35
mt.gear.35 %>% bind_rows(mt.gear$`3`, mt.gear$`5`)
mt.gear$`44`
mt.gear$`4`
mtcars %>% filter( wt >= 1.5 & wt <= 3.0 )
# 문6)
# 다음의 문제를 해결하기 위한 R코드를 작성하시오.
#
# 다음과 같이 데이터프레임 authors와 books를 생성하고 authors와 books의 내
# 용을 출력하시오.
#
authors <- data.frame( surname = c( "Twein", "Venables", "Tierney", "Ripley", "McNeil" ),
nationality = c( "US", "Australia", "US", "UK", "Australia" ),
retired = c( "yes", rep( "no", 4 ) ) )
books <- data.frame( name = c( "Johns", "Venables", "Tierney", "Ripley", "Ripley", "McNeil" ),
title = c( "Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis" ),
other.author = c( NA, "Ripley", NA, NA, NA, NA ) )
# (1) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하시오(두
#                                                        데이터프레임에서 공통 열의 값이 일치하는 것들만 병합).
anb.df <- merge(authors, books,
by.x = c('surname'),
by.y = c('name') )
anb.df
x <- data.frame( name = c('a','b','c'),
mat = c(90,80,40) )
y <- data.frame( sname = c('a','b','d'),
korean = c(75,60,90) )
merge(x,y,by.x = c('name'),
by.y = c('sname'))
anb.df <- merge(authors, books,
by.x = c('surname'),
by.y = c('name'),
all.x = TRUE)
anb.df
anb.df <- merge(authors, books,
by.x = c('surname'),
by.y = c('name'),
all.y = TRUE)
anb.df
anb.df <- merge(authors, books,
by.x = c('surname'),
by.y = c('other.author') )
anb.df
st.df %>% arrange(Illiteracy) %>%
head(10)
st.df <- data.frame(state.x77)
st.df %>% arrange(Population) %>%
head
st.df <- data.frame(state.x77)
st.df
st.df %>% arrange( desc(Income) )
st.df %>% select(Illiteracy) %>%
arrange(Illiteracy) %>%
head(10)
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ)]
AQ <- data.frame(airquality)
apply(AQ, 2, function(y) sum( is.na(y) ) )
sum( rowSums( is.na(AQ) > 0 ) )
# (4) AQ에서 NA를 포함하지 않은 행들만 출력하시오.
AQ[ complete.cases(AQ), ]
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ)]
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ), ]
AQ[ AQ == NA ]
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ), ]
apply(AQ[,i], 2, mean)
apply(AQ[,1], 2, mean)
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ), ]
apply(AQ[,1], 2, mean)
apply(AQ[,1], 2, mean)
apply(AQ[,c(1,6)], 2, mean)
apply(AQ[complete.cases(AQ)], 2, mean)
apply(AQ[complete.cases(AQ),], 2, mean)
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ), ]
for(i in 1:6){
mean.value <- apply(AQ[complete.cases(AQ), i], 2, mean)
AQ[ is.na(AQ[,i]) ] <- mean.value
}
mean.value <- apply( AQ[complete.cases(AQ), ], 2, mean )
# (5) AQ에서 NA를 NA가 속한 열의 평균값으로 치환하여 AQ2로 저장하고, AQ2의 내용을
# 출력하시오.
AQ[!complete.cases(AQ), ]
mean.value <- apply( AQ[complete.cases(AQ), ], 2, mean )
mean.value <- apply( AQ[complete.cases(AQ), ], 2, mean )
mean.value
mean.value[1]
for(i in 1:6){
AQ[ is.na(AQ[,i]) ] <- mean.value[i]
}
AQ
AQ[ is.na(AQ[,1]) ]
AQ[ is.na(AQ[,1]) ]
AQ[ ,is.na(AQ[,1]) ]
AQ[ is.na(AQ[,1]), ]
for(i in 1:6){
AQ[ is.na(AQ[,i]), ] <- mean.value[i]
}
AQ
install.packages("jsonlite")
library(jsonlite)
install.packages("httr")
library(httr)
df_repos <- fromJSON("https://gw.jejudatahub.net/api/proxy/070eab103b1e11e994c4ef64bf51b7cf/{your_appkey}?startDate=201601&endDate=201911")
df_repos <- fromJSON("https://gw.jejudatahub.net/api/proxy/070eab103b1e11e994c4ef64bf51b7cf/{your_appkey}?startDate=201601&endDate=201902")
df_repos <- fromJSON("http://jstp.jejutour.go.kr/openapi/service/apiservice/JejuGuestData.do?year=2016&month=8&serviceKey=TEST_SERVICE_KEY&numOfRows=10&pageNo=1")
df_repos <- fromJSON("http://jstp.jejutour.go.kr/openapi/service/apiservice/JejuGuestData.do?year=2016&month=8&serviceKey=TEST_SERVICE_KEY&numOfRows=10&pageNo=1")
df <- data.frame(names <- c(201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712),
china,
spend)
china <- c(276431,272842,184371,168872,184306,180094,87669,28988,31382,33184,40825,38560,30753,32175,28329,31050)
spend <- c(20.28601,20.81411,21.11092,24.50063,24.31851,23.8021,17.40746,28.66265,29.02361,29.70323,30.27184.40.92801,41.99633,35.8428,34.11818,55.60976)
china <- c(276431,272842,184371,168872,184306,180094,87669,28988,31382,33184,40825,38560,30753,32175,28329,31050)
spend <- c(20.28601,20.81411,21.11092,24.50063,24.31851,23.8021,17.40746,28.66265,29.02361,29.70323,30.27184.40.92801,41.99633,35.8428,34.11818,55.60976)
spend <- c(20.28601,20.81411,21.11092,24.50063,24.31851,23.8021,17.40746,28.66265,29.02361,29.70323,30.27184,40.92801,41.99633,35.8428,34.11818,55.60976)
df <- data.frame(names <- c(201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712),
china,
spend)
df
df.name <- c(201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712)
china <- c(276431,272842,184371,168872,184306,180094,87669,28988,31382,33184,40825,38560,30753,32175,28329,31050)
spend <- c(20.28601,20.81411,21.11092,24.50063,24.31851,23.8021,17.40746,28.66265,29.02361,29.70323,30.27184,40.92801,41.99633,35.8428,34.11818,55.60976)
df <- data.frame(china,spend)
df
df.name <- c(201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712)
df
df$name <- c(201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712)
df
name <- c(201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712)
china <- c(276431,272842,184371,168872,184306,180094,87669,28988,31382,33184,40825,38560,30753,32175,28329,31050)
spend <- c(20.28601,20.81411,21.11092,24.50063,24.31851,23.8021,17.40746,28.66265,29.02361,29.70323,30.27184,40.92801,41.99633,35.8428,34.11818,55.60976)
df <- data.frame(name,china,spend)
df
plot(df)
plot(df$china, df$spend)
plot(df$china, df$spend,
col = "red")
plot(df$china, df$spend,
col = "red", pch = 19)
plot(df$china, df$spend,
xlab = "중국인 관광객", ylab = "소비"
col = "red", pch = 19)
plot(df$china, df$spend,
xlab = "중국인 관광객", ylab = "소비",
col = "red", pch = 19)
# 회귀식 도출
res <- lm( df$china~df$spend, data = df )
res
# 회귀선
abline( res )
df
# 상관계수 도출 (correlation)
cor( df[ , 2:3 ] )  # 다변량 상관 계수
library(ggplot2)
df <- data.frame(times, seoul, busan, daegu)
times <- c(2010:2018)
seoul <- c(1,3,5,7,9,11,13,15,17)
busan <- c(2,4,6,8,10,12,14,16,18)
daegu <- c(25,24,22,20,18,16,17,5,20)
df <- data.frame(times, seoul, busan, daegu)
df
ggplot(df)+
geom_line(aes(x=times, y=seoul))
ggplot(df)+
geom_line(aes(x=times, y=seoul))+
geom_line(aes(x=times, y=busan))
ggplot(df)+
geom_line(aes(x=times, y=seoul))+
geom_line(aes(x=times, y=busan))+
geom_line(aes(x=times, y=daegu))
seoul <- c(1,11,5,15,9,3,13,7,17)
busan <- c(2,4,6,8,10,12,14,16,18)
daegu <- c(25,24,22,20,18,16,17,5,20)
df <- data.frame(times, seoul, busan, daegu)
df
ggplot(df)+
geom_line(aes(x=times, y=seoul))+
geom_line(aes(x=times, y=busan))+
geom_line(aes(x=times, y=daegu))
install.packages('reshape2')
#  다중 선 그래프 예시 1
ggplot(df)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))
#  다중 선 그래프 예시 1
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))
df1 <- data.frame(times, seoul, busan, daegu)
df1
#  다중 선 그래프 예시 1
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))
df2 <- melt( df1[ , c("seoul", "busan", "daegu")], id = "times")
library(reshape2)
df2 <- melt( df1[ , c("seoul", "busan", "daegu")], id = "times")
times <- c(2010:2018)
seoul <- c(1,11,5,15,9,3,13,7,17)
busan <- c(2,4,6,8,10,12,14,16,18)
daegu <- c(25,24,22,20,18,16,17,5,20)
df1 <- data.frame(times, seoul, busan, daegu)
df1
df2 <- melt( df1[ , c("seoul", "busan", "daegu")], id = "times")
# 다중 선 그래프 예시 2
install.packages('tidyr')
library(tidyr)
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(0,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(0,1))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,1))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"))+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 2)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 3)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 4)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 5)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 7)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 0)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 1)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6, size = 3)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6, size = 2)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6, size = 1)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6, size = 0.5)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6, size = 0.9)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
ggplot(df1)+
geom_line(aes(x=times, y=seoul, col="seoul"), linetype = 6, size = 1.2)+
geom_line(aes(x=times, y=busan, col="busan"))+
geom_line(aes(x=times, y=daegu, col="daegu"))+
labs(title = "제목")+
theme(legend.position = c(1,0), legend.justification = c(1,0))
)
library(ggmap)
install.packages(ggmap)
install.packages("ggmap")
library(ggmap)
jeju1 <- read.csv(file = "티맵제주1901.csv", header = TRUE)
jeju1 <- read.csv("티맵제주1901.csv", header = TRUE)
setwd("C:/Users/jinxi/OneDrive/Desktop/191215/3. 검색지역")
jeju1 <- read.csv("티맵제주1901.csv", header = TRUE)
setwd("C:/Users/jinxi/OneDrive/Desktop/191215/3. 검색지역")
setwd('C:/Users/jinxi/OneDrive/Desktop/191215/1. 관광객수/요인분석')
setwd('C:/Rstory/work123/R_project/team/1. 관광객수/요인분석')
setwd('C:/Rstudy/work123/R_project/team/1. 관광객수/요인분석')
korChemistry <- read.csv("상관관계 관광 월단위 2015-2018.csv",header=T)
korChemistry
korChemistry <- read.csv("상관관계 관광 월단위 2015-2018.csv", header=T)
korChemistry
plot(korChemistry$한국, korChemistry$일본권,
xlab = "한국인 관광객 수", ylab = "일본권 관광객 수",
col = "red", pch = 19)
# 회귀식 도출
res <- lm( 일본권~한국, data = korChemistry )
res
# 회귀선
abline( res )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(1,2) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(1,2) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,3) ] )
plot(korChemistry$한국, korChemistry$중화권,
xlab = "한국인 관광객 수", ylab = "중화권 관광객 수",
col = "red", pch = 19)
# 회귀식 도출
res <- lm( 중화권~한국, data = korChemistry )
res
# 회귀선
abline( res )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,4) ] )
plot(korChemistry$한국, korChemistry$동남아권,
xlab = "한국인 관광객 수", ylab = "동남아권 관광객 수",
col = "red", pch = 19)
res <- lm( 동남아권~한국, data = korChemistry )
res
# 회귀선
abline( res )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,5) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,6) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,7) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,8) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,5) ] )
setwd('C:/Rstudy/work123/R_project/team/1. 관광객수')
setwd('C:/Rstudy/work123/R_project/team/1. 관광객수')
korChemistry <- read.csv("외인+한국 관광 월단위 2015-2018.csv", header=T)
korChemistry
plot(korChemistry$한국, korChemistry$일본,
xlab = "한국인 관광객 수", ylab = "일본 관광객 수",
col = "red", pch = 19)
korChemistry
plot(korChemistry$한국, korChemistry$일본,
xlab = "한국인 관광객 수", ylab = "일본 관광객 수",
col = "red", pch = 19)
plot(korChemistry$한국, korChemistry$일본,
xlab = "한국인 관광객 수", ylab = "일본 관광객 수",
col = "red", pch = 19)
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,3) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,4) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,5) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,6) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,7) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,8) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,9) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,10) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,11) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,12) ] )
# 상관계수 도출 (correlation)
cor( korChemistry[ , c(2,13) ] )
